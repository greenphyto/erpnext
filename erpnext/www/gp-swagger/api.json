{
    "openapi": "3.0.2",
    "info": {
        "title": "Swagger Petstore - OpenAPI 3.0.3",
        "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.18"
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "servers": [
        {
            "url": "/api/v3"
        }
    ],
    "tags": [
        {
            "name": "pet",
            "description": "Everything about your Pets",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "store",
            "description": "Access to Petstore orders",
            "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "user",
            "description": "Operations about user"
        }
    ],
    "paths": {
        "/pet": {
            "put": {
                "tags": [
                    "pet"
                ],
                "summary": "Update an existing pet",
                "description": "Update an existing pet by Id",
                "operationId": "updatePet",
                "requestBody": {
                    "description": "Update an existent pet in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pet"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Pet"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Pet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "pet"
                ],
                "summary": "Add a new pet to the store",
                "description": "Add a new pet to the store",
                "operationId": "addPet",
                "requestBody": {
                    "description": "Create a new pet in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pet"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Pet"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Pet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            }
        },
        "/pet/{petId}": {
            "get": {
                "tags": [
                    "pet"
                ],
                "summary": "Find pet by ID",
                "description": "Returns a single pet",
                "operationId": "getPetById",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "pet"
                ],
                "summary": "Updates a pet in the store with form data",
                "description": "",
                "operationId": "updatePetWithForm",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of pet that needs to be updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of pet that needs to be updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "pet"
                ],
                "summary": "Deletes a pet",
                "description": "",
                "operationId": "deletePet",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "header",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "Pet id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid pet value"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            }
        }

    },
    "components": {
        "schemas": {
            "Order": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 10
                            },
                            "petId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 198772
                            },
                            "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "example": 7
                            },
                            "shipDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "description": "Order Status",
                                "example": "approved",
                                "enum": [
                                    "placed",
                                    "approved",
                                    "delivered"
                                ]
                            },
                            "complete": {
                                "type": "boolean"
                            }
                        },
                        "xml": {
                            "name": "order"
                        }
                    },
                    "petId": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 10
                            },
                            "petId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 198772
                            },
                            "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "example": 7
                            },
                            "shipDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "description": "Order Status",
                                "example": "approved",
                                "enum": [
                                    "placed",
                                    "approved",
                                    "delivered"
                                ]
                            },
                            "complete": {
                                "type": "boolean"
                            }
                        },
                        "xml": {
                            "name": "order"
                        }
                    },
                    "quantity": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 10
                            },
                            "petId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 198772
                            },
                            "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "example": 7
                            },
                            "shipDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "description": "Order Status",
                                "example": "approved",
                                "enum": [
                                    "placed",
                                    "approved",
                                    "delivered"
                                ]
                            },
                            "complete": {
                                "type": "boolean"
                            }
                        },
                        "xml": {
                            "name": "order"
                        }
                    },
                    "shipDate": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 10
                            },
                            "petId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 198772
                            },
                            "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "example": 7
                            },
                            "shipDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "description": "Order Status",
                                "example": "approved",
                                "enum": [
                                    "placed",
                                    "approved",
                                    "delivered"
                                ]
                            },
                            "complete": {
                                "type": "boolean"
                            }
                        },
                        "xml": {
                            "name": "order"
                        }
                    },
                    "status": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 10
                            },
                            "petId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 198772
                            },
                            "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "example": 7
                            },
                            "shipDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "description": "Order Status",
                                "example": "approved",
                                "enum": [
                                    "placed",
                                    "approved",
                                    "delivered"
                                ]
                            },
                            "complete": {
                                "type": "boolean"
                            }
                        },
                        "xml": {
                            "name": "order"
                        }
                    },
                    "complete": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 10
                            },
                            "petId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 198772
                            },
                            "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "example": 7
                            },
                            "shipDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "description": "Order Status",
                                "example": "approved",
                                "enum": [
                                    "placed",
                                    "approved",
                                    "delivered"
                                ]
                            },
                            "complete": {
                                "type": "boolean"
                            }
                        },
                        "xml": {
                            "name": "order"
                        }
                    }
                },
                "xml": {
                    "name": "order"
                }
            }
        },
        "requestBodies": {
            "Pet": {
                "description": "Pet object that needs to be added to the store",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Pet"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Pet"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "petstore_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
                        "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                        }
                    }
                }
            },
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            }
        }
    }
}